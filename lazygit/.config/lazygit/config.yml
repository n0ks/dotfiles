# Config relating to git
git:
  # Config relating to committing
  commit:
    # If autoWrapCommitMessage is true, the width to wrap to
    autoWrapWidth: 80

# Periodic update checks
update:
  # One of: 'prompt' (default) | 'background' | 'never'
  method: prompt

  # Period in days between update checks
  days: 14

# Background refreshes
refresher:
  # File/submodule refresh interval in seconds.
  # Auto-refresh can be disabled via option 'git.autoRefresh'.
  refreshInterval: 10

  # Re-fetch interval in seconds.
  # Auto-fetch can be disabled via option 'git.autoFetch'.
  fetchInterval: 60

# If true, show a confirmation popup before quitting Lazygit
confirmOnQuit: false

# If true, exit Lazygit when the user presses escape in a context where there is nothing to cancel/close
quitOnTopLevelReturn: false

# Config relating to things outside of Lazygit like how files are opened, copying to clipboard, etc
os:
  # Command for editing a file. Should contain "{{filename}}".
  edit: "nvim {{filename}}"

  open: "nvim {{filename}}"
  openLink: open -a "/Applications/Google Chrome.app" {{link}}

gui:
    border: rounded
    theme:
        activeBorderColor:
            - "#5ef1ff"
        inactiveBorderColor:
            - "#7b8496"
        searchingActiveBorderColor:
            - "#ff5ef1"
        optionsTextColor:
            - "#3c4048"
        selectedLineBgColor:
            - "#3c4048"
        cherryPickedCommitBgColor:
            - "#3c4048"
        cherryPickedCommitFgColor:
            - "#ff5ea0"
        unstagedChangesColor:
            - "#ffbd5e"
        defaultFgColor:
            - "#ffffff"
customCommands:
  - key: "<c-p>"
    command: "git remote prune {{.SelectedRemote.Name}}"
    context: "remotes"
    loadingText: "Pruning..."
    description: "prune deleted remote branches"
  - key: "b"
    command: "git branch --merged master | grep -v '^[ *]*master$' | xargs -r git branch -d"
    context: "localBranches"
    loadingText: "Pruning..."
    description: "prune local branches that have been merged to master"
  - key: "G"
    command: |
      git fetch -p && for branch in $(git for-each-ref --format '%(refname) %(upstream:track)' refs/heads | awk '$2 == "[gone]" {sub("refs/heads/", "", $1); print $1}'); do git branch -D $branch; done
    context: "localBranches"
    description: "Prune local branches no longer on its remote; (G)one."
    loadingText: "Pruning gone..."
