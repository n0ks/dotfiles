{
  "Json factory": {
    "prefix": "jss",
    "body": [
      "factory ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}.fromJson(Map<String, dynamic> json) => _\\$${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}FromJson(json);",
      " ",
      "Map<String, dynamic> toJson() => _\\$${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}ToJson(this);"
    ],
    "description": "Create Json serializable"
  },
  "Freezed dataclass": {
    "prefix": "fdataclass",
    "body": [
      "part '${TM_FILENAME_BASE}.freezed.dart';",
      "part '${TM_FILENAME_BASE}.g.dart';",
      " ",
      "@freezed",
      "class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} with _\\$${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} { ",
      " ",
      "const factory ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}() = _${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}",
      "}"
    ],
    "description": "Create a freezed dataclass"
  },

  "Freezed state": {
    "prefix": "fstate",
    "body": [
      "part '${TM_FILENAME_BASE}.freezed.dart';",
      "part '${TM_FILENAME_BASE}.g.dart';",
      " ",
      "@freezed",
      "class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} with _\\$${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} { ",
      " ",

      "const factory ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}({required bool param}) = _${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g};",

      " ",

      "factory ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}.initial() => const ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}({})",
      "}"
    ],
    "description": "Create a freezed dataclass"
  },
  "Part file": {
    "prefix": "pts",
    "body": [
      "part '${TM_FILENAME_BASE}.g.dart';"
    ],
    "description": "Create .g part"
  },
  "Freezed Part file": {
    "prefix": "fpts",
    "body": [
      "part '${TM_FILENAME_BASE}.freezed.dart';"
    ],
    "description": "Create .freezed part"
  },
  "Ignore file coverage": {
    "prefix": "cov",
    "body": [
      "// coverage: ignore-file"
    ],
    "description": "Ignore this file on test coverage"
  },
  "Verify": {
    "prefix": "ve",
    "body": [
      "verify(() => $1);"
    ],
    "description": "Verify test"
  }
}
